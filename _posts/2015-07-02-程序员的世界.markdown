---
layout: post
title:  程序员的世界
date:   2015-07-02
time:   22:54:00
tags:  
     -funny

---

##   好久没更新博客了，今天来写点什么

在21世纪开始后，程序员成为了一种很重要的生产力。由于工作性质的特殊性，决定了他们是社会中的另类。你会发现这类人很难管理，他们经常会做出一些奇怪的举动（比如冲着电脑发呆，偶尔舒展下眉宇什么的）；甚至会为了一些工作无关的事情（通常是自然科学和谁更缺心眼这种话题）争吵很久。想要管理这些人，就要知道他们究竟是怎么想的，又是什么原因导致的。

###  我用的语言是世界上最完美的语言

如果你想在开发者论坛引发一阵辩论，这是百试不爽的开场白。

程序设计语言千千万，每种语言都有其追随者。《JVM核心技术揭秘》这本书里说过一句类似这样的话：如果一门语言没有改变你思考问题的方式，那么你就没有学会这门语言。。。这就像中国人学英语一样，学会英语前，你会在头脑中用汉语描述一个想法或者观点，最终翻译为英语表达出来；而当你真正掌握英语后，你就会开始用英语思考，并直接说出来。后者的状态意味着你真的学会了英语。。。

相似的问题也出现在程序设计语言中。各种语言的追随者掌握了自己的语言之后，他们的思考方式就开始顺从于这门语言，当新语言尝试进入他们的视线时，会发现新语言同他们思考问题的方式相左。于是抵触情绪就产生了，这种情绪越强烈，这批人就会越偏向自己原本掌握的语言。于是争论就发生了了，仔细观察双方的论点（java函数范式很难用／C++的指针很难用／python很难系粒度操作内存啊）也会得出类似的结论。

###   我写出的代码才是最优秀的

好的程序员一般都是完美主义者，他们会努力让自己的代码更符合自己的审美需求（包括代码逻辑，编程风格，功能逻辑等），为了达到这一目的，他们会尝试不同的方案去解决同一问题，并从中选出最优方案。所以无论代码解决的问题是大是小，都是他们倾注很大的心血完成的。在这样的前提下，他们自己的代码当然是最优秀的。

其实一个程序员如果没有这种特质，那么他也不会成为一名优秀的程序员。整天被动的拷贝代码，而不去试图区分代码间异同的家伙，能优秀起来那就是贱了鬼了。

###   XXX连程序都不会写凭什么领导我

这种程序员有很多，有些人技术真的很优秀，而另一些却只是在挑毛病。事实上，程序员一般都思维活跃，不喜欢被束缚，在他们看来一切枷锁都是要解决掉的，如果有个人成天在他上面叽叽咕咕，胡乱指挥，他们自然会很讨厌。

想要驯服这种程序员也很容易，第一种方法是最有效的，让自己比他技术更牛，程序员是很容易服从比他更牛的人的。第二种是比较容易做到的。那就是掌握任何一门有技术含量的手艺（能把office发挥的淋漓尽致也是一门有技术含量的手艺），他也会开始由衷佩服滴。第三种，效果最弱，但也可以一试，那就是把自己工作中很无趣的工作交给他一部分，当他有抱怨情绪时，再适当的透露自己每日为了应付这些事情多么的痛苦。取得他的理解后，再管理起来就会容易一些，这种方法效果最弱，只能解决一小部分问题。

###   工作鄙视链

程序员是一个极具创造性的职业，他们敲出代码是一个从无到有的过程，时间久了，这些人会成就感爆棚，觉得自己无所不能（创造这种事，怎么瞧都和上帝很像）。于是他们就会开始鄙视那些不动脑，甚至毫无创造性的职员。当大家都处在同一团队时，会出现协同效果不好的情况。造成这一效果的原因在于他们无法发现这些职位的创造性一面，多沟通多让他们发现这些点，会一定程度缓解这种效果。

##    尾巴
写了这么多，却一点都不够系统，甚至可能都没有解决任何问题，但我就是想把它写在这里，总有一天从这些点会穿成一条线，最终形成一个面。到那时这些文字就不再毫无意义了。