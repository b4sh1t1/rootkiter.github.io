---
layout: post
title:  "SSH-Socks-Tunnel"
date:   2015-05-03
time:   16:06:00

---

# 介绍
SSH是Secure Shell的缩写，常见于linux主机远程管理中，它和telnet之间有一定的联系，区别在于它的网络传输数据是经过加密的，而telnet是明文传输的，如果被抓包程序抓到，可能导致敏感信息泄漏的问题。  
那么SSH和Socks之间又有什么关系呢，看过[这篇文章](/2015/05/01/使用Socks代理服务.html "Socks代理")一定会知道 Socks服务在网络管理中有很非常多的优点，除可隐身访问目标服务器外，还可以达到一种翻墙的效果。如果能让SSH服务器快速变成一个Socks代理服务器，对我们会有很多的益处（翻墙／远程内网渗透测试）。可能SSH的开发者也思考过这个问题，于是让SSH服务天生的就支持了Socks代理的功能，看来SSH还是挺可爱的嘛。

# Windows客户端中部署Socks代理

在windows主机上利用ssh隧道的方法有很多，我这里用到的工具为Xshell。其使用步骤如下。  
1.配置Xshell，并通过ssh连接远程主机（测试中的ssh服务器为一台位于美国的私人VPS），如下图示：

![图1](/images/2015_05_03_16_36/2_1.png)  
![图2](/images/2015_05_03_16_36/2_2.png)  

2.在 文件－> 属性 菜单配置 socks代理的隧道  


![图3](/images/2015_05_03_16_36/2_3.png)  
![图4](/images/2015_05_03_16_36/2_4.png)  
![图5](/images/2015_05_03_16_36/2_5.png)  
![图6](/images/2015_05_03_16_36/2_6.png)  

此时本地的 127.0.0.1:1080 端口便有了一个刚配置好的Socks代理服务器，它将以SSH服务器为跳板来处理代理请求。  
有了代理服务后怎么用可参考[这篇文章](/2015/05/01/使用Socks代理服务.html "Socks代理")。

# Linux 客户端中部署Socks代理

由于测试环境限制，这里以Ubuntu环境为例其他的 *nux 主机方法类似：
利用 ssh 的 –D 选项可以在本地开启一个监听1080端口的 socks代理服务器。于此同时还能成功连接到远程的主机，如下图所示：


![图7](/images/2015_05_03_16_36/2_7.png)  

